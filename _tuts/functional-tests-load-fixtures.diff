diff --git a/app/AppKernel.php b/app/AppKernel.php
index bb49609..c05a763 100644
--- a/app/AppKernel.php
+++ b/app/AppKernel.php
@@ -1,5 +1,6 @@
 <?php
 
+use Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle;
 use Liip\FunctionalTestBundle\LiipFunctionalTestBundle;
 use Symfony\Component\HttpKernel\Kernel;
 use Symfony\Component\Config\Loader\LoaderInterface;
@@ -23,6 +24,7 @@ class AppKernel extends Kernel
             $bundles[] = new Symfony\Bundle\DebugBundle\DebugBundle();
             $bundles[] = new Symfony\Bundle\WebProfilerBundle\WebProfilerBundle();
             $bundles[] = new Sensio\Bundle\DistributionBundle\SensioDistributionBundle();
+            $bundles[] = new DoctrineFixturesBundle();
 
             if ('dev' === $this->getEnvironment()) {
                 $bundles[] = new Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle();
diff --git a/app/config/config_test.yml b/app/config/config_test.yml
index d73f497..f2b3b3a 100644
--- a/app/config/config_test.yml
+++ b/app/config/config_test.yml
@@ -25,4 +25,5 @@ doctrine:
     dbal:
         url: 'sqlite:///%kernel.project_dir%/var/data/test.sqlite'
 
-liip_functional_test: ~
+liip_functional_test:
+    cache_sqlite_db: true
diff --git a/composer.json b/composer.json
index ffe783e..2c9c3be 100644
--- a/composer.json
+++ b/composer.json
@@ -35,6 +35,7 @@
     },
     "require-dev": {
         "doctrine/data-fixtures": "^1.3",
+        "doctrine/doctrine-fixtures-bundle": "^2.3",
         "liip/functional-test-bundle": "^1.8",
         "phpunit/phpunit": "^6.3",
         "sensio/generator-bundle": "^3.0",
diff --git a/composer.lock b/composer.lock
index a8b442a..2ec8bc1 100644
--- a/composer.lock
+++ b/composer.lock
@@ -4,7 +4,7 @@
         "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
         "This file is @generated automatically"
     ],
-    "content-hash": "0fe4a802da31340a30eaafeb7e4613a9",
+    "content-hash": "a1e5e1a1d89cb97b602b8d1e52c62076",
     "packages": [
         {
             "name": "composer/ca-bundle",
@@ -2716,6 +2716,63 @@
             ],
             "time": "2019-10-24T04:52:28+00:00"
         },
+        {
+            "name": "doctrine/doctrine-fixtures-bundle",
+            "version": "v2.4.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/doctrine/DoctrineFixturesBundle.git",
+                "reference": "74b8cc70a4a25b774628ee59f4cdf3623a146273"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/doctrine/DoctrineFixturesBundle/zipball/74b8cc70a4a25b774628ee59f4cdf3623a146273",
+                "reference": "74b8cc70a4a25b774628ee59f4cdf3623a146273",
+                "shasum": ""
+            },
+            "require": {
+                "doctrine/data-fixtures": "~1.0",
+                "doctrine/doctrine-bundle": "~1.0",
+                "php": ">=5.3.2",
+                "symfony/doctrine-bridge": "~2.7|~3.0|~4.0"
+            },
+            "type": "symfony-bundle",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.4.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Doctrine\\Bundle\\FixturesBundle\\": ""
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Symfony Community",
+                    "homepage": "http://symfony.com/contributors"
+                },
+                {
+                    "name": "Doctrine Project",
+                    "homepage": "http://www.doctrine-project.org"
+                },
+                {
+                    "name": "Fabien Potencier",
+                    "email": "fabien@symfony.com"
+                }
+            ],
+            "description": "Symfony DoctrineFixturesBundle",
+            "homepage": "http://www.doctrine-project.org",
+            "keywords": [
+                "Fixture",
+                "persistence"
+            ],
+            "time": "2017-10-30T19:26:42+00:00"
+        },
         {
             "name": "liip/functional-test-bundle",
             "version": "1.8.0",
diff --git a/src/AppBundle/DataFixtures/ORM/LoadBasicParkData.php b/src/AppBundle/DataFixtures/ORM/LoadBasicParkData.php
new file mode 100644
index 0000000..c7efe9f
--- /dev/null
+++ b/src/AppBundle/DataFixtures/ORM/LoadBasicParkData.php
@@ -0,0 +1,53 @@
+<?php
+
+namespace AppBundle\DataFixtures\ORM;
+
+use AppBundle\Entity\Dinosaur;
+use AppBundle\Entity\Enclosure;
+use Doctrine\Common\DataFixtures\AbstractFixture;
+use Doctrine\Common\DataFixtures\OrderedFixtureInterface;
+use Doctrine\Common\Persistence\ObjectManager;
+
+class LoadBasicParkData extends AbstractFixture implements OrderedFixtureInterface
+{
+    public function load(ObjectManager $manager)
+    {
+        $carnivorousEnclosure = new Enclosure();
+        $manager->persist($carnivorousEnclosure);
+        $this->addReference('carnivorous-enclosure', $carnivorousEnclosure);
+
+        $herbivorousEnclosure = new Enclosure();
+        $manager->persist($herbivorousEnclosure);
+        $this->addReference('herbivorous-enclosure', $herbivorousEnclosure);
+
+        $manager->persist(new Enclosure(true));
+
+        $this->addDinosaur($manager, $carnivorousEnclosure, 'Velociraptor', true, 3);
+        $this->addDinosaur($manager, $carnivorousEnclosure, 'Velociraptor', true, 1);
+        $this->addDinosaur($manager, $carnivorousEnclosure, 'Velociraptor', true, 5);
+
+        $this->addDinosaur($manager, $herbivorousEnclosure, 'Triceratops', false, 7);
+
+        $manager->flush();
+    }
+
+    public function getOrder()
+    {
+        return 1;
+    }
+
+    private function addDinosaur(
+        ObjectManager $manager,
+        Enclosure $enclosure,
+        string $genus,
+        bool $isCarnivorous,
+        int $length
+    )
+    {
+        $dinosaur = new Dinosaur($genus, $isCarnivorous);
+        $dinosaur->setEnclosure($enclosure);
+        $dinosaur->setLength($length);
+
+        $manager->persist($dinosaur);
+    }
+}
diff --git a/src/AppBundle/DataFixtures/ORM/LoadSecurityData.php b/src/AppBundle/DataFixtures/ORM/LoadSecurityData.php
new file mode 100644
index 0000000..f02342e
--- /dev/null
+++ b/src/AppBundle/DataFixtures/ORM/LoadSecurityData.php
@@ -0,0 +1,40 @@
+<?php
+
+namespace AppBundle\DataFixtures\ORM;
+
+use AppBundle\Entity\Enclosure;
+use AppBundle\Entity\Security;
+use Doctrine\Common\DataFixtures\AbstractFixture;
+use Doctrine\Common\DataFixtures\OrderedFixtureInterface;
+use Doctrine\Common\Persistence\ObjectManager;
+
+class LoadSecurityData extends AbstractFixture implements OrderedFixtureInterface
+{
+    public function load(ObjectManager $manager)
+    {
+        $herbivorousEnclosure = $this->getReference('herbivorous-enclosure');
+
+        $this->addSecurity($herbivorousEnclosure, 'Fence', true);
+
+        $carnivorousEnclosure = $this->getReference('carnivorous-enclosure');
+
+        $this->addSecurity($carnivorousEnclosure, 'Electric fence', false);
+        $this->addSecurity($carnivorousEnclosure, 'Guard tower', false);
+
+        $manager->flush();
+    }
+
+    public function getOrder()
+    {
+        return 2;
+    }
+
+    private function addSecurity(
+        Enclosure $enclosure,
+        string $name,
+        bool $isActive
+    )
+    {
+        $enclosure->addSecurity(new Security($name, $isActive, $enclosure));
+    }
+}
diff --git a/src/AppBundle/Entity/Dinosaur.php b/src/AppBundle/Entity/Dinosaur.php
index bbe36aa..ea11724 100644
--- a/src/AppBundle/Entity/Dinosaur.php
+++ b/src/AppBundle/Entity/Dinosaur.php
@@ -78,4 +78,9 @@ class Dinosaur
     {
         return $this->isCarnivorous;
     }
+
+    public function setEnclosure(Enclosure $enclosure)
+    {
+        $this->enclosure = $enclosure;
+    }
 }
diff --git a/tests/AppBundle/Controller/DefaultControllerTest.php b/tests/AppBundle/Controller/DefaultControllerTest.php
index c6b3992..df76e96 100644
--- a/tests/AppBundle/Controller/DefaultControllerTest.php
+++ b/tests/AppBundle/Controller/DefaultControllerTest.php
@@ -2,12 +2,19 @@
 
 namespace Tests\AppBundle\Controller;
 
+use AppBundle\DataFixtures\ORM\LoadBasicParkData;
+use AppBundle\DataFixtures\ORM\LoadSecurityData;
 use Liip\FunctionalTestBundle\Test\WebTestCase;
 
 class DefaultControllerTest extends WebTestCase
 {
     public function testEnclosuresAreShownOnHomepage()
     {
+        $this->loadFixtures([
+            LoadBasicParkData::class,
+            LoadSecurityData::class,
+        ]);
+
         $client = $this->makeClient();
 
         $crawler = $client->request('GET', '/');
